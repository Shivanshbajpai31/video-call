{"ast":null,"code":"var _jsxFileName = \"D:\\\\Call site\\\\video-call-app\\\\src\\\\pages\\\\CallRoom.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5889'); // Connect to your backend server\n\nconst CallRoom = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [stream, setStream] = useState(null);\n  const userVideoRef = useRef();\n  const peerVideoRef = useRef();\n  const peerRef = useRef();\n  useEffect(() => {\n    // Get user media (video and audio)\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      if (userVideoRef.current) {\n        userVideoRef.current.srcObject = stream;\n      }\n    });\n\n    // Join the room\n    socket.emit('join-room', roomId);\n\n    // Handle signaling data\n    socket.on('signal', data => {\n      if (!peerRef.current) {\n        createPeer(data);\n      } else {\n        peerRef.current.signal(data);\n      }\n    });\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n      socket.disconnect();\n    };\n  }, [roomId]);\n  const createPeer = (initiator = true) => {\n    const peer = new Peer({\n      initiator,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('signal', {\n        roomId,\n        data\n      });\n    });\n    peer.on('stream', stream => {\n      if (peerVideoRef.current) {\n        peerVideoRef.current.srcObject = stream;\n      }\n    });\n    peerRef.current = peer;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: userVideoRef,\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: peerVideoRef,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(CallRoom, \"qx8ZM/yoVVa17SKRmj9pmpFfIzE=\", false, function () {\n  return [useParams];\n});\n_c = CallRoom;\nexport default CallRoom;\nvar _c;\n$RefreshReg$(_c, \"CallRoom\");","map":{"version":3,"names":["useEffect","useRef","useState","useParams","io","Peer","jsxDEV","_jsxDEV","socket","CallRoom","_s","roomId","stream","setStream","userVideoRef","peerVideoRef","peerRef","navigator","mediaDevices","getUserMedia","video","audio","then","current","srcObject","emit","on","data","createPeer","signal","getTracks","forEach","track","stop","disconnect","initiator","peer","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","_c","$RefreshReg$"],"sources":["D:/Call site/video-call-app/src/pages/CallRoom.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst socket = io('http://localhost:5889'); // Connect to your backend server\r\n\r\nconst CallRoom = () => {\r\n  const { roomId } = useParams();\r\n  const [stream, setStream] = useState(null);\r\n  const userVideoRef = useRef();\r\n  const peerVideoRef = useRef();\r\n  const peerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Get user media (video and audio)\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n      setStream(stream);\r\n      if (userVideoRef.current) {\r\n        userVideoRef.current.srcObject = stream;\r\n      }\r\n    });\r\n\r\n    // Join the room\r\n    socket.emit('join-room', roomId);\r\n\r\n    // Handle signaling data\r\n    socket.on('signal', (data) => {\r\n      if (!peerRef.current) {\r\n        createPeer(data);\r\n      } else {\r\n        peerRef.current.signal(data);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      if (stream) {\r\n        stream.getTracks().forEach((track) => track.stop());\r\n      }\r\n      socket.disconnect();\r\n    };\r\n  }, [roomId]);\r\n\r\n  const createPeer = (initiator = true) => {\r\n    const peer = new Peer({ initiator, stream });\r\n\r\n    peer.on('signal', (data) => {\r\n      socket.emit('signal', { roomId, data });\r\n    });\r\n\r\n    peer.on('stream', (stream) => {\r\n      if (peerVideoRef.current) {\r\n        peerVideoRef.current.srcObject = stream;\r\n      }\r\n    });\r\n\r\n    peerRef.current = peer;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Room: {roomId}</h1>\r\n      <video ref={userVideoRef} autoPlay muted />\r\n      <video ref={peerVideoRef} autoPlay />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CallRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}