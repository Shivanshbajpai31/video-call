{"ast":null,"code":"var _jsxFileName = \"D:\\\\Call site\\\\video-call-app\\\\src\\\\pages\\\\CallRoom.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5889'); // Connect to your backend server\n\nconst CallRoom = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [stream, setStream] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const userVideoRef = useRef();\n  const peerVideoRef = useRef();\n  const peerRef = useRef();\n  useEffect(() => {\n    // Get user media (video and audio)\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      if (userVideoRef.current) {\n        userVideoRef.current.srcObject = stream;\n      }\n    });\n\n    // Join the room\n    socket.emit('join-room', roomId);\n\n    // Handle signaling data\n    socket.on('signal', data => {\n      if (!peerRef.current) {\n        createPeer(data);\n      } else {\n        peerRef.current.signal(data);\n      }\n    });\n\n    // Handle receiving chat messages\n    socket.on('receive-message', data => {\n      setMessages(prev => [...prev, data]);\n    });\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n      socket.disconnect();\n    };\n  }, [roomId]);\n  const createPeer = (initiator = true) => {\n    const peer = new Peer({\n      initiator,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('signal', {\n        roomId,\n        data\n      });\n    });\n    peer.on('stream', stream => {\n      if (peerVideoRef.current) {\n        peerVideoRef.current.srcObject = stream;\n      }\n    });\n    peerRef.current = peer;\n  };\n  const sendMessage = () => {\n    if (newMessage) {\n      const messageData = {\n        roomId,\n        message: newMessage,\n        sender: socket.id\n      };\n      socket.emit('send-message', messageData);\n      setMessages(prev => [...prev, messageData]);\n      setNewMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: userVideoRef,\n        autoPlay: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: peerVideoRef,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '10px',\n          height: '200px',\n          overflowY: 'scroll'\n        },\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type a message\",\n        style: {\n          width: '80%',\n          padding: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: {\n          padding: '5px'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(CallRoom, \"fhyw2i/95LcmlF/36o+KN+0U7NI=\", false, function () {\n  return [useParams];\n});\n_c = CallRoom;\nexport default CallRoom;\nvar _c;\n$RefreshReg$(_c, \"CallRoom\");","map":{"version":3,"names":["useEffect","useRef","useState","useParams","io","Peer","jsxDEV","_jsxDEV","socket","CallRoom","_s","roomId","stream","setStream","messages","setMessages","newMessage","setNewMessage","userVideoRef","peerVideoRef","peerRef","navigator","mediaDevices","getUserMedia","video","audio","then","current","srcObject","emit","on","data","createPeer","signal","prev","getTracks","forEach","track","stop","disconnect","initiator","peer","sendMessage","messageData","message","sender","id","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","style","border","padding","height","overflowY","map","msg","index","type","value","onChange","e","target","placeholder","width","onClick","_c","$RefreshReg$"],"sources":["D:/Call site/video-call-app/src/pages/CallRoom.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst socket = io('http://localhost:5889'); // Connect to your backend server\r\n\r\nconst CallRoom = () => {\r\n  const { roomId } = useParams();\r\n  const [stream, setStream] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const userVideoRef = useRef();\r\n  const peerVideoRef = useRef();\r\n  const peerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    // Get user media (video and audio)\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\r\n      setStream(stream);\r\n      if (userVideoRef.current) {\r\n        userVideoRef.current.srcObject = stream;\r\n      }\r\n    });\r\n\r\n    // Join the room\r\n    socket.emit('join-room', roomId);\r\n\r\n    // Handle signaling data\r\n    socket.on('signal', (data) => {\r\n      if (!peerRef.current) {\r\n        createPeer(data);\r\n      } else {\r\n        peerRef.current.signal(data);\r\n      }\r\n    });\r\n\r\n    // Handle receiving chat messages\r\n    socket.on('receive-message', (data) => {\r\n      setMessages((prev) => [...prev, data]);\r\n    });\r\n\r\n    return () => {\r\n      if (stream) {\r\n        stream.getTracks().forEach((track) => track.stop());\r\n      }\r\n      socket.disconnect();\r\n    };\r\n  }, [roomId]);\r\n\r\n  const createPeer = (initiator = true) => {\r\n    const peer = new Peer({ initiator, stream });\r\n\r\n    peer.on('signal', (data) => {\r\n      socket.emit('signal', { roomId, data });\r\n    });\r\n\r\n    peer.on('stream', (stream) => {\r\n      if (peerVideoRef.current) {\r\n        peerVideoRef.current.srcObject = stream;\r\n      }\r\n    });\r\n\r\n    peerRef.current = peer;\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (newMessage) {\r\n      const messageData = { roomId, message: newMessage, sender: socket.id };\r\n      socket.emit('send-message', messageData);\r\n      setMessages((prev) => [...prev, messageData]);\r\n      setNewMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Room: {roomId}</h1>\r\n      <div>\r\n        <video ref={userVideoRef} autoPlay muted />\r\n        <video ref={peerVideoRef} autoPlay />\r\n      </div>\r\n      <div>\r\n        <h2>Chat</h2>\r\n        <div style={{ border: '1px solid #ccc', padding: '10px', height: '200px', overflowY: 'scroll' }}>\r\n          {messages.map((msg, index) => (\r\n            <div key={index}>\r\n              <strong>{msg.sender}:</strong> {msg.message}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type a message\"\r\n          style={{ width: '80%', padding: '5px' }}\r\n        />\r\n        <button onClick={sendMessage} style={{ padding: '5px' }}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CallRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}